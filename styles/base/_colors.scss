/*
  color functions + mixins
*/

@function contrast($color, $dark: color(text, dark), $light: color(text, light)) {
  @if (lightness($color) > 67) {
    @return $dark;
  } @else {
    @return $light;
  }
}

@mixin contrast($color, $dark: color(text, dark), $light: color(text, light)) {
  background: $color;
  color: contrast($color, $dark, $light);
}


/* primary + neutral colors */
$-charcoal: #405460;
$-cloud: #fbfbfd;
$-storm: #586b76;
$-meadow: #3e9d9d;
$-peach: #ff996f;

/* auxilliary colours */
$-grass: #3eaf7b;
$-sky: #4e7fbd;
$-sun: #f9d97f;
$-watermelon: #f77486;


/* color map */
$colors: (
  accent: $-peach,
  black: $-charcoal,
  neutral: $-storm,
  primary: $-meadow,
  white: $-cloud,

  success: $-grass,
  info: $-sky,
  danger: $-watermelon,
  warning: $-sun,
  
  neutrals: (
    100: lighten($-storm, 56),
    200: lighten($-storm, 50),
    300: lighten($-storm, 44),
    400: lighten($-storm, 32),
    500: lighten($-storm, 21),
    600: lighten($-storm, 10),
    700: $-storm,
  ),
);


/* color getter function */
@function color($keys...) {
  /* neutrals */
  @if (nth($keys, 1) == neutral and length($keys) > 1) {
    @return map-get(map-get($colors, neutrals), nth($keys, 2));
  }

  /* text */
  @if (nth($keys, 1) == text and length($keys) > 2) {
    @if (nth($keys, 2) == dark) {
      @return map-get(map-get(map-get($colors, text), darks), nth($keys, 3));
    }

    @if (nth($keys, 2) == light) {
      @return map-get(map-get(map-get($colors, text), lights), nth($keys, 3));
    }
  }

  $value: $colors;

  @each $key in $keys {
    $value: map-get($value, $key);
  }

  @return $value;
}


/* additional element colors */
$colors: map-merge($colors, (
  text: (
    dark: rgba(color(black), .8),
    light: rgba(color(white), .8),

    darks: (
      accent: color(black),
      subtle: rgba(color(black), .6),
    ),

    lights: (
      accent: color(white),
      subtle: rgba(color(white), .6),
    ),

    dark-accent: color(black),
    dark-subtle: rgba(color(black), .6),

    light-accent: color(white),
    light-subtle: rgba(color(white), .6),
  ),
));
